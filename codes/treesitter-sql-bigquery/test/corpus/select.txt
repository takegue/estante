================================================================================
SELECT statement with bigquery public dataset
================================================================================

SELECT * FROM `bigquery-public-data.austin_311.311_service_requests` LIMIT 1000

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (select_all
            (asterisk_expression)))
        (from_clause
          (from_item
            (identifier))))
      (limit_clause))))

================================================================================
SELECT statement with REPLACE
================================================================================

WITH orders AS
  (SELECT 5 as order_id,
  "sprocket" as item_name,
  200 as quantity)
SELECT * REPLACE (quantity * 2 as quantity2)
FROM orders;

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (cte_clause
        (identifier)
        (query_expr
          (select
            (select_list
              (alias
                (number)
                (identifier))
              (alias
                (string)
                (identifier))
              (alias
                (number)
                (identifier))))))
      (select
        (select_list
          (select_all
            (asterisk_expression)
            (binary_expression
              (identifier)
              (number))
            (as_alias
              (identifier))))
        (from_clause
          (from_item
            (identifier)))))))


================================================================================
SELECT statement with EXCEPT
================================================================================

WITH orders AS
  (SELECT 5 as order_id,
  "sprocket" as item_name,
  200 as quantity)
SELECT * EXCEPT (order_id)
FROM orders;

--------------------------------------------------------------------------------
 
(source_file
  (query_statement
    (query_expr
      (cte_clause
        (identifier)
        (query_expr
          (select
            (select_list
              (alias
                (number)
                (identifier))
              (alias
                (string)
                (identifier))
              (alias
                (number)
                (identifier))))))
      (select
        (select_list
          (select_all
            (asterisk_expression)
            (identifier)))
        (from_clause
          (from_item
            (identifier)))))))

================================================================================
SELECT statement with Set Operators
================================================================================

select 1 
UNION ALL (select 2 UNION DISTINCT select 3)
UNION ALL (select 2 INTERSECT DISTINCT select 3)
UNION ALL (select 2 EXCEPT DISTINCT select 3)

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (set_operation
        (query_expr
          (select
            (select_list
              (number))))
        (query_expr
          (set_operation
            (query_expr
              (query_expr
                (set_operation
                  (query_expr
                    (select
                      (select_list
                        (number))))
                  (query_expr
                    (select
                      (select_list
                        (number)))))))
            (query_expr
              (set_operation
                (query_expr
                  (query_expr
                    (set_operation
                      (query_expr
                        (select
                          (select_list
                            (number))))
                      (query_expr
                        (select
                          (select_list
                            (number)))))))
                (query_expr
                  (query_expr
                    (set_operation
                      (query_expr
                        (select
                          (select_list
                            (number))))
                      (query_expr
                        (select
                          (select_list
                            (number)))))))))))))))

================================================================================
SELECT statement with joins
================================================================================

SELECT a, t.a, t.b
FROM table1 AS t
JOIN t1 ON (t.a = t1.a)
INNER JOIN t2 ON (t.a = t2.a)
FULL OUTER JOIN t2 ON t.a = t2.a
FULL JOIN t3 ON t.a = t3.a
RIGHT JOIN t4 ON t.a = t4.a
RIGHT OUTER JOIN t5 ON t.a = t5.a
LEFT JOIN t6 ON t.a = t6.a
LEFT OUTER JOIN t7 ON t.a = t7.a;

--------------------------------------------------------------------------------
 
(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (identifier)
          (identifier)
          (identifier))
        (from_clause
          (from_item
            (join_operation
              (from_item
                (join_operation
                  (from_item
                    (join_operation
                      (from_item
                        (join_operation
                          (from_item
                            (join_operation
                              (from_item
                                (join_operation
                                  (from_item
                                    (join_operation
                                      (from_item
                                        (join_operation
                                          (from_item
                                            (identifier)
                                            (as_alias
                                              (identifier)))
                                          (from_item
                                            (identifier))
                                          (binary_expression
                                            (identifier)
                                            (identifier))))
                                      (join_type)
                                      (from_item
                                        (identifier))
                                      (binary_expression
                                        (identifier)
                                        (identifier))))
                                  (join_type)
                                  (from_item
                                    (identifier))
                                  (binary_expression
                                    (identifier)
                                    (identifier))))
                              (join_type)
                              (from_item
                                (identifier))
                              (binary_expression
                                (identifier)
                                (identifier))))
                          (join_type)
                          (from_item
                            (identifier))
                          (binary_expression
                            (identifier)
                            (identifier))))
                      (join_type)
                      (from_item
                        (identifier))
                      (binary_expression
                        (identifier)
                        (identifier))))
                  (join_type)
                  (from_item
                    (identifier))
                  (binary_expression
                    (identifier)
                    (identifier))))
              (join_type)
              (from_item
                (identifier))
              (binary_expression
                (identifier)
                (identifier)))))))))

================================================================================
SELECT with cross join
================================================================================

SELECT a as b, c d, e
FROM table1 AS t, table2 t2, table3

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (alias
            (identifier)
            (identifier))
          (alias
            (identifier)
            (identifier))
          (identifier))
        (from_clause
          (from_item
            (join_operation
              (from_item
                (join_operation
                  (from_item
                    (identifier)
                    (as_alias
                      (identifier)))
                  (from_item
                    (identifier)
                    (as_alias
                      (identifier)))))
              (from_item
                (identifier)))))))))

================================================================================
SELECT with CTE
================================================================================

with cte1 as (
  select 1 as a
)
, cte2 as (
  select * from cte1
)

select * from cte2

--------------------------------------------------------------------------------

(source_file
 (query_statement
  (query_expr
   (cte_clause
    (identifier)
    (query_expr
     (select
      (select_list
       (alias
        (number)
        (identifier)))))
    (identifier)
    (query_expr
     (select
      (select_list
       (select_all
        (asterisk_expression)))
      (from_clause
       (from_item
        (identifier))))))
   (select
    (select_list
     (select_all
      (asterisk_expression)))
    (from_clause
     (from_item
      (identifier)))))))


================================================================================
SELECT statement FROM clause
================================================================================

SELECT a, b FROM table1;

--------------------------------------------------------------------------------

(source_file
 (query_statement
  (query_expr
   (select
    (select_list
     (identifier)
     (identifier))
    (from_clause
     (from_item
      (identifier)))))))

================================================================================
SELECT statement with SELECT subexpression
================================================================================

SELECT (SELECT 1) AS a

--------------------------------------------------------------------------------

(source_file
 (query_statement
  (query_expr
   (select
    (select_list
     (alias
      (select_subexpression
       (query_statement
        (query_expr
         (select
          (select_list
           (number))))))
      (identifier)))))))

================================================================================
SELECT statement with aliases
================================================================================

SELECT a, b AS c FROM table1 AS t;

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (identifier)
          (alias
            (identifier)
            (identifier)))
        (from_clause
          (from_item
            (identifier)
            (as_alias
              (identifier))))))))


================================================================================
SELECT statement with group by
================================================================================

SELECT a, b
FROM table1
GROUP BY lower(a), b;

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (identifier)
          (identifier))
        (from_clause
          (from_item
            (identifier)))
        (group_by_clause
          (group_by_clause_body
            (function_call
              (identifier)
              (identifier))
            (identifier)))))))

================================================================================
SELECT statement with order by
================================================================================

SELECT a, b
FROM table1
ORDER BY lower(a), b;

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (identifier)
          (identifier))
        (from_clause
          (from_item
            (identifier))))
      (order_by_clause
        (order_by_clause_body
          (function_call
            (identifier)
            (identifier))
          (identifier))))))

================================================================================
SELECT statement FROM multiple tables
================================================================================

SELECT a, b FROM table1, table2;

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (identifier)
          (identifier))
        (from_clause
          (from_item
            (join_operation
              (from_item
                (identifier))
              (from_item
                (identifier)))))))))

================================================================================
SELECT statement with columns
================================================================================

SELECT a, b;

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (identifier)
          (identifier))))))

================================================================================
Can parse subquery
================================================================================

SELECT id
FROM foo
WHERE id < (
  SELECT id
  FROM bar
  LIMIT 1 OFFSET 0
);

---

(source_file
 (query_statement
  (query_expr
   (select
    (select_list
     (identifier))
    (from_clause
     (from_item
      (identifier)))
    (where_clause
     (binary_expression
      (identifier)
      (select_subexpression
       (query_statement
        (query_expr
         (select
          (select_list
           (identifier))
          (from_clause
           (from_item
            (identifier))))
         (limit_clause))))))))))

================================================================================
SELECT asterisk expressions
================================================================================

SELECT * FROM Customers;
SELECT a.* FROM Customers;
SELECT COUNT(*) FROM Customers;
SELECT COUNT(a.*) FROM Customers;

--------------------------------------------------------------------------------

(source_file
 (query_statement
  (query_expr
   (select
    (select_list
     (select_all
      (asterisk_expression)))
    (from_clause
     (from_item
      (identifier))))))
 (query_statement
  (query_expr
   (select
    (select_list
     (select_all
      (asterisk_expression)))
    (from_clause
     (from_item
      (identifier))))))
 (query_statement
  (query_expr
   (select
    (select_list
     (function_call
      (identifier)
      (asterisk_expression)))
    (from_clause
     (from_item
      (identifier))))))
 (query_statement
  (query_expr
   (select
    (select_list
     (function_call
      (identifier)
      (asterisk_expression)))
    (from_clause
     (from_item
      (identifier)))))))


================================================================================
UNNEST
================================================================================

select * from unnest([1, 2, 3]);
select * from unnest([]) as hoge with offset;
select * from unnest(field_path) as hoge with offset;

--------------------------------------------------------------------------------


(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (select_all
            (asterisk_expression)))
        (from_clause
          (from_item
            (unnest_clause
              (unnest_operator
                (array
                  (number)
                  (number)
                  (number)))))))))
  (query_statement
    (query_expr
      (select
        (select_list
          (select_all
            (asterisk_expression)))
        (from_clause
          (from_item
            (unnest_clause
              (unnest_operator
                (array))
              (identifier)
              (unnest_withoffset)))))))
  (query_statement
    (query_expr
      (select
        (select_list
          (select_all
            (asterisk_expression)))
        (from_clause
          (from_item
            (unnest_clause
              (unnest_operator)
              (identifier)
              (unnest_withoffset))))))))

================================================================================
TABLESAMPLE operator
================================================================================

SELECT * FROM dataset.my_table TABLESAMPLE SYSTEM (10 PERCENT)

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (select_all
            (asterisk_expression)))
        (from_clause
          (from_item
            (identifier))
          (tablesample_operator))))))

================================================================================
One cte
================================================================================

WITH my_cte AS (
  SELECT one, two
  FROM my_table
)
SELECT *
FROM my_cte;

---

(source_file
 (query_statement
  (query_expr
   (cte_clause
    (identifier)
    (query_expr
     (select
      (select_list
       (identifier)
       (identifier))
      (from_clause
       (from_item
        (identifier))))))
   (select
    (select_list
     (select_all
      (asterisk_expression)))
    (from_clause
     (from_item
      (identifier)))))))

================================================================================
SELECT: pivot operator
================================================================================

SELECT * FROM Produce
PIVOT(SUM(sales) FOR quarter IN ('Q1', 'Q2', 'Q3', 'Q4'))

--------------------------------------------------------------------------------

(source_file
 (query_statement
  (query_expr
   (select
    (select_list
     (select_all
      (asterisk_expression)))
    (from_clause
     (from_item
      (identifier))
     (pivot_operator
      (pivot_value
       (function_call
        (identifier)
        (identifier)))
      (input_column)
      (pivot_column
       (string))
      (pivot_column
       (string))
      (pivot_column
       (string))
      (pivot_column
       (string))))))))


================================================================================
SELECT: unpivot operator
================================================================================

SELECT * FROM Produce
UNPIVOT(sales FOR quarter IN (Q1, Q2, Q3, Q4));

SELECT * FROM Produce
UNPIVOT(
  (first_half_sales, second_half_sales)
  FOR semesters
  IN ((Q1, Q2) AS 'semester_1', (Q3, Q4) AS 'semester_2'))

--------------------------------------------------------------------------------

(source_file
 (query_statement
  (query_expr
   (select
    (select_list
     (select_all
      (asterisk_expression)))
    (from_clause
     (from_item
      (identifier))
     (unpivot_operator
      (single_column_unpivot
       (unpivot_value)
       (name_column)
       (unpivot_column
        (identifier))
       (unpivot_column
        (identifier))
       (unpivot_column
        (identifier))
       (unpivot_column
        (identifier))))))))
 (query_statement
  (query_expr
   (select
    (select_list
     (select_all
      (asterisk_expression)))
    (from_clause
     (from_item
      (identifier))
     (unpivot_operator
      (multi_column_unpivot
       (unpivot_value)
       (unpivot_value)
       (name_column)
       (unpivot_column
        (struct
         (identifier)
         (identifier))
        (string))
       (unpivot_column
        (struct
         (identifier)
         (identifier))
        (string)))))))))
