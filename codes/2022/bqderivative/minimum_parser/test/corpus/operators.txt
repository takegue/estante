================================================================================
OPERATORS: Unary Operators
================================================================================

select
    +1,
    -1,
    ~1,
    NOT TRUE,
    null IS NOT TRUE,
    false IS FALSE,
    hoge IS NULL
;

--------------------------------------------------------------------------------

(source_file
 (query_statement
  (query_expr
   (select
    (select_list
     (select_expression
      (number))
     (select_expression
      (number))
     (select_expression
      (unary_expression
       (number)))
     (select_expression
      (unary_expression
       (TRUE)))
     (select_expression
      (unary_expression
       (NULL)
       (TRUE)))
     (select_expression
      (unary_expression
       (FALSE)
       (FALSE)))
     (select_expression
      (unary_expression
       (identifier)
       (NULL))))))))

================================================================================
OPERATORS: Binary Operators
================================================================================

select
    1 - 2 * 3 / 10,
    "string1" || hoge2,
    (2 << 4) >> 2,
    TRUE AND NOT (null is true)
    ;

--------------------------------------------------------------------------------

(source_file
 (query_statement
  (query_expr
   (select
    (select_list
     (select_expression
      (binary_expression
       (number)
       (binary_expression
        (binary_expression
         (number)
         (number))
        (number))))
     (select_expression
      (binary_expression
       (string)
       (identifier)))
     (select_expression
      (binary_expression
       (binary_expression
        (number)
        (number))
       (number)))
     (select_expression
      (binary_expression
       (TRUE)
       (unary_expression
        (unary_expression
         (NULL)
          (TRUE))))))))))

================================================================================
OPERATORS: EXISTS operator
================================================================================

SELECT EXISTS ( SELECT value FROM Words WHERE direction = 'south' ) as result;

--------------------------------------------------------------------------------

(source_file
 (query_statement
  (query_expr
   (select
    (select_list
     (select_expression
      (unary_expression
       (select_subexpression
        (query_expr
         (select
          (select_list
           (select_expression
            (identifier)))
          (from_clause
           (from_item
            (identifier)))
          (where_clause
           (binary_expression
            (identifier)
            (string)))))))
      (as_alias
       (identifier))))))))

================================================================================
OPERATORS: Function Calls
================================================================================

SELECT
  A(1),
  COUNT(DISTINCT 1, 2, 3 ignore nulls order by hoge limit 10),
  EXTRACT(YEAR FROM NOW())

--------------------------------------------------------------------------------

(source_file
 (query_statement
  (query_expr
   (select
    (select_list
     (select_expression
      (function_call
       (identifier)
       (number)))
     (select_expression
      (function_call
       (identifier)
       (distinct)
       (number)
       (number)
       (number)
       (order_by_clause
        (order_by_clause_body
         (identifier)))
       (limit_clause)))
     (select_expression
      (function_call
       (identifier)
       (datetime_part)
       (function_call
        (identifier)))))))))

================================================================================
OPERATORS: JSON Functions
================================================================================

SELECT
  INT64(json_number),
  FLOAT64(json_number)

--------------------------------------------------------------------------------

(source_file
 (query_statement
  (query_expr
   (select
    (select_list
     (select_expression
      (function_call
       (identifier)
       (identifier)))
     (select_expression
      (function_call
       (identifier)
       (identifier))))))))
