================================================================================
SELECT statement with bigquery public dataset
================================================================================

SELECT * FROM `bigquery-public-data.austin_311.311_service_requests` LIMIT 1000

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (select_all
            (asterisk_expression)))
        (from_clause
          (from_item
            (identifier))))
      (limit_clause))))

================================================================================
SELECT statement with REPLACE
================================================================================

SELECT * REPLACE (quantity * 2 as quantity2)
FROM orders;

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (select_all
            (asterisk_expression)
            (select_all_replace
              (select_replace_expression
                (binary_expression
                  (identifier)
                  (number))
                (as_alias
                  (identifier))))))
        (from_clause
          (from_item
            (identifier)))))))

================================================================================
SELECT statement with EXCEPT
================================================================================

SELECT * EXCEPT (order_id)
FROM orders;

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (select_all
            (asterisk_expression)
            (select_all_except
              (identifier))))
        (from_clause
          (from_item
            (identifier)))))))

================================================================================
SELECT statement with Set Operators
================================================================================

select 1
UNION ALL (select 2 UNION DISTINCT select 3)
UNION ALL (select 2 INTERSECT DISTINCT select 3)
UNION ALL (select 2 EXCEPT DISTINCT select 3)

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (set_operation
        (query_expr
          (select
            (select_list
              (select_expression
                (number)))))
        (query_expr
          (set_operation
            (query_expr
              (query_expr
                (set_operation
                  (query_expr
                    (select
                      (select_list
                        (select_expression
                          (number)))))
                  (query_expr
                    (select
                      (select_list
                        (select_expression
                          (number))))))))
            (query_expr
              (set_operation
                (query_expr
                  (query_expr
                    (set_operation
                      (query_expr
                        (select
                          (select_list
                            (select_expression
                              (number)))))
                      (query_expr
                        (select
                          (select_list
                            (select_expression
                              (number))))))))
                (query_expr
                  (query_expr
                    (set_operation
                      (query_expr
                        (select
                          (select_list
                            (select_expression
                              (number)))))
                      (query_expr
                        (select
                          (select_list
                            (select_expression
                              (number))))))))))))))))

================================================================================
SELECT statement with joins
================================================================================

SELECT a, t.a, t.b
FROM table1 AS t
JOIN t1 ON (t.a = t1.a)
INNER JOIN t2 ON (t.a = t2.a)
FULL OUTER JOIN t2 ON t.a = t2.a
FULL JOIN t3 ON t.a = t3.a
RIGHT JOIN t4 ON t.a = t4.a
RIGHT OUTER JOIN t5 ON t.a = t5.a
LEFT JOIN t6 ON t.a = t6.a
LEFT OUTER JOIN t7 ON t.a = t7.a;

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (select_expression
            (identifier))
          (select_expression
            (identifier))
          (select_expression
            (identifier)))
        (from_clause
          (from_item
            (join_operation
              (from_item
                (join_operation
                  (from_item
                    (join_operation
                      (from_item
                        (join_operation
                          (from_item
                            (join_operation
                              (from_item
                                (join_operation
                                  (from_item
                                    (join_operation
                                      (from_item
                                        (join_operation
                                          (from_item
                                            (identifier)
                                            (as_alias
                                              (identifier)))
                                          (from_item
                                            (identifier))
                                          (join_condition
                                            (binary_expression
                                              (identifier)
                                              (identifier)))))
                                      (join_type)
                                      (from_item
                                        (identifier))
                                      (join_condition
                                        (binary_expression
                                          (identifier)
                                          (identifier)))))
                                  (join_type)
                                  (from_item
                                    (identifier))
                                  (join_condition
                                    (binary_expression
                                      (identifier)
                                      (identifier)))))
                              (join_type)
                              (from_item
                                (identifier))
                              (join_condition
                                (binary_expression
                                  (identifier)
                                  (identifier)))))
                          (join_type)
                          (from_item
                            (identifier))
                          (join_condition
                            (binary_expression
                              (identifier)
                              (identifier)))))
                      (join_type)
                      (from_item
                        (identifier))
                      (join_condition
                        (binary_expression
                          (identifier)
                          (identifier)))))
                  (join_type)
                  (from_item
                    (identifier))
                  (join_condition
                    (binary_expression
                      (identifier)
                      (identifier)))))
              (join_type)
              (from_item
                (identifier))
              (join_condition
                (binary_expression
                  (identifier)
                  (identifier))))))))))

================================================================================
SELECT statement with nested joins
================================================================================

SELECT a, t.a, t.b
FROM ( (A JOIN B USING (x)) JOIN C USING (x,y) );

SELECT *
FROM A, B JOIN (C JOIN D ON C.x = D.y) ON B.z = C.x

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (select_expression
            (identifier))
          (select_expression
            (identifier))
          (select_expression
            (identifier)))
        (from_clause
          (from_item
            (join_operation
              (from_item
                (join_operation
                  (from_item
                    (identifier))
                  (from_item
                    (identifier))
                  (join_condition
                    (identifier))))
              (from_item
                (identifier))
              (join_condition
                (identifier)
                (identifier))))))))
  (query_statement
    (query_expr
      (select
        (select_list
          (select_all
            (asterisk_expression)))
        (from_clause
          (from_item
            (join_operation
              (from_item
                (join_operation
                  (from_item
                    (identifier))
                  (from_item
                    (identifier))))
              (from_item
                (join_operation
                  (from_item
                    (identifier))
                  (from_item
                    (identifier))
                  (join_condition
                    (binary_expression
                      (identifier)
                      (identifier)))))
              (join_condition
                (binary_expression
                  (identifier)
                  (identifier))))))))))

================================================================================
SELECT with cross join
================================================================================

SELECT a as b, c d, e
FROM table1 AS t, table2 t2, table3

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (select_expression
            (identifier)
            (as_alias
              (identifier)))
          (select_expression
            (identifier)
            (as_alias
              (identifier)))
          (select_expression
            (identifier)))
        (from_clause
          (from_item
            (join_operation
              (from_item
                (join_operation
                  (from_item
                    (identifier)
                    (as_alias
                      (identifier)))
                  (from_item
                    (identifier)
                    (as_alias
                      (identifier)))))
              (from_item
                (identifier)))))))))

================================================================================
SELECT with CTE
================================================================================

with cte1 as (
  select 1 as a
)
, cte2 as (
  select * from cte1
)

select * from cte2

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (cte_clause
        (non_recursive_cte
          (identifier)
          (query_expr
            (select
              (select_list
                (select_expression
                  (number)
                  (as_alias
                    (identifier)))))))
        (non_recursive_cte
          (identifier)
          (query_expr
            (select
              (select_list
                (select_all
                  (asterisk_expression)))
              (from_clause
                (from_item
                  (identifier)))))))
      (select
        (select_list
          (select_all
            (asterisk_expression)))
        (from_clause
          (from_item
            (identifier)))))))

================================================================================
SELECT statement FROM clause
================================================================================

SELECT a, b FROM table1;

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (select_expression
            (identifier))
          (select_expression
            (identifier)))
        (from_clause
          (from_item
            (identifier)))))))

================================================================================
SELECT statement with SELECT subexpression
================================================================================

SELECT (SELECT 1) AS a

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (select_expression
            (select_subexpression
              (query_expr
                (select
                  (select_list
                    (select_expression
                      (number))))))
            (as_alias
              (identifier))))))))

================================================================================
SELECT statement with aliases
================================================================================

SELECT a hoge, b AS c FROM table1 AS t;

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (select_expression
            (identifier)
            (as_alias
              (identifier)))
          (select_expression
            (identifier)
            (as_alias
              (identifier))))
        (from_clause
          (from_item
            (identifier)
            (as_alias
              (identifier))))))))

================================================================================
SELECT statement with group by
================================================================================

SELECT a, b
FROM table1
GROUP BY lower(a), b;

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (select_expression
            (identifier))
          (select_expression
            (identifier)))
        (from_clause
          (from_item
            (identifier)))
        (group_by_clause
          (group_by_clause_body
            (function_call
              (identifier)
              (identifier))
            (identifier)))))))

================================================================================
SELECT statement with order by
================================================================================

SELECT * FROM table1
ORDER BY lower(a), b;

SELECT * FROM table1
ORDER BY a nulls first, b;

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (select_all
            (asterisk_expression)))
        (from_clause
          (from_item
            (identifier))))
      (order_by_clause
        (order_by_clause_body
          (function_call
            (identifier)
            (identifier))
          (identifier)))))
  (query_statement
    (query_expr
      (select
        (select_list
          (select_all
            (asterisk_expression)))
        (from_clause
          (from_item
            (identifier))))
      (order_by_clause
        (order_by_clause_body
          (identifier)
          (identifier))))))

================================================================================
SELECT statement FROM multiple tables
================================================================================

SELECT a, b FROM table1, table2;

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (select_expression
            (identifier))
          (select_expression
            (identifier)))
        (from_clause
          (from_item
            (join_operation
              (from_item
                (identifier))
              (from_item
                (identifier)))))))))

================================================================================
SELECT statement with columns
================================================================================

SELECT a, b;

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (select_expression
            (identifier))
          (select_expression
            (identifier)))))))

================================================================================
SELECT: Can parse subquery
================================================================================

SELECT id
FROM foo
WHERE id < (
  SELECT id
  FROM bar
  LIMIT 1 OFFSET 0
);

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (select_expression
            (identifier)))
        (from_clause
          (from_item
            (identifier)))
        (where_clause
          (binary_expression
            (identifier)
            (select_subexpression
              (query_expr
                (select
                  (select_list
                    (select_expression
                      (identifier)))
                  (from_clause
                    (from_item
                      (identifier))))
                (limit_clause)))))))))

================================================================================
SELECT asterisk expressions
================================================================================

SELECT * FROM Customers;
SELECT a.* FROM Customers;
SELECT COUNT(*) FROM Customers;
SELECT COUNT(a.*) FROM Customers;

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (select_all
            (asterisk_expression)))
        (from_clause
          (from_item
            (identifier))))))
  (query_statement
    (query_expr
      (select
        (select_list
          (select_all
            (asterisk_expression)))
        (from_clause
          (from_item
            (identifier))))))
  (query_statement
    (query_expr
      (select
        (select_list
          (select_expression
            (function_call
              (identifier)
              (asterisk_expression))))
        (from_clause
          (from_item
            (identifier))))))
  (query_statement
    (query_expr
      (select
        (select_list
          (select_expression
            (function_call
              (identifier)
              (asterisk_expression))))
        (from_clause
          (from_item
            (identifier)))))))

================================================================================
UNNEST
================================================================================

select * from unnest([1, 2, 3]);
select * from unnest([1, 2, 3]) a;
select * from unnest([1, 2, 3] || [1, 2, 3]) a;
select * from unnest([]) as hoge with offset;
select * from unnest(field_path) as hoge with offset;

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (select_all
            (asterisk_expression)))
        (from_clause
          (from_item
            (unnest_clause
              (unnest_operator
                (array
                  (number)
                  (number)
                  (number)))))))))
  (query_statement
    (query_expr
      (select
        (select_list
          (select_all
            (asterisk_expression)))
        (from_clause
          (from_item
            (unnest_clause
              (unnest_operator
                (array
                  (number)
                  (number)
                  (number)))
              (as_alias
                (identifier))))))))
  (query_statement
    (query_expr
      (select
        (select_list
          (select_all
            (asterisk_expression)))
        (from_clause
          (from_item
            (unnest_clause
              (unnest_operator
                (binary_expression
                  (array
                    (number)
                    (number)
                    (number))
                  (array
                    (number)
                    (number)
                    (number))))
              (as_alias
                (identifier))))))))
  (query_statement
    (query_expr
      (select
        (select_list
          (select_all
            (asterisk_expression)))
        (from_clause
          (from_item
            (unnest_clause
              (unnest_operator
                (array))
              (as_alias
                (identifier))
              (unnest_withoffset)))))))
  (query_statement
    (query_expr
      (select
        (select_list
          (select_all
            (asterisk_expression)))
        (from_clause
          (from_item
            (unnest_clause
              (unnest_operator
                (identifier))
              (as_alias
                (identifier))
              (unnest_withoffset))))))))

================================================================================
TABLESAMPLE operator
================================================================================

SELECT * FROM dataset.my_table TABLESAMPLE SYSTEM (10 PERCENT)

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (select_all
            (asterisk_expression)))
        (from_clause
          (from_item
            (identifier))
          (tablesample_operator))))))

================================================================================
SELECT: pivot operator
================================================================================

SELECT * FROM Produce
PIVOT(SUM(sales) FOR quarter IN ('Q1', 'Q2', 'Q3', 'Q4'));

SELECT * FROM
(SELECT product, sales, quarter FROM Produce)
PIVOT(SUM(sales) total_sales, COUNT(*) num_records FOR quarter IN ('Q1' as Q1, 'Q2'))

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (select_all
            (asterisk_expression)))
        (from_clause
          (from_item
            (identifier))
          (pivot_operator
            (pivot_value
              (function_call
                (identifier)
                (identifier)))
            (input_column)
            (pivot_column
              (string))
            (pivot_column
              (string))
            (pivot_column
              (string))
            (pivot_column
              (string)))))))
  (query_statement
    (query_expr
      (select
        (select_list
          (select_all
            (asterisk_expression)))
        (from_clause
          (from_item
            (select_subexpression
              (query_expr
                (select
                  (select_list
                    (select_expression
                      (identifier))
                    (select_expression
                      (identifier))
                    (select_expression
                      (identifier)))
                  (from_clause
                    (from_item
                      (identifier)))))))
          (pivot_operator
            (pivot_value
              (function_call
                (identifier)
                (identifier))
              (as_alias
                (identifier)))
            (pivot_value
              (function_call
                (identifier)
                (asterisk_expression))
              (as_alias
                (identifier)))
            (input_column)
            (pivot_column
              (string)
              (as_alias
                (identifier)))
            (pivot_column
              (string))))))))

================================================================================
SELECT: unpivot operator
================================================================================

SELECT * FROM Produce
UNPIVOT(sales FOR quarter IN (Q1, Q2, Q3, Q4));

SELECT * FROM Produce
UNPIVOT(
  (first_half_sales, second_half_sales)
  FOR semesters
  IN ((Q1, Q2) AS 'semester_1', (Q3, Q4) AS 'semester_2'))

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (select_all
            (asterisk_expression)))
        (from_clause
          (from_item
            (identifier))
          (unpivot_operator
            (single_column_unpivot
              (unpivot_value)
              (name_column)
              (unpivot_column
                (identifier))
              (unpivot_column
                (identifier))
              (unpivot_column
                (identifier))
              (unpivot_column
                (identifier))))))))
  (query_statement
    (query_expr
      (select
        (select_list
          (select_all
            (asterisk_expression)))
        (from_clause
          (from_item
            (identifier))
          (unpivot_operator
            (multi_column_unpivot
              (unpivot_value)
              (unpivot_value)
              (name_column)
              (unpivot_column
                (struct
                  (identifier)
                  (identifier))
                (string))
              (unpivot_column
                (struct
                  (identifier)
                  (identifier))
                (string)))))))))

================================================================================
SELECT: trailing comma
================================================================================

select 1,

--------------------------------------------------------------------------------

(source_file
  (query_statement
    (query_expr
      (select
        (select_list
          (select_expression
            (number)))))))
